//
// Settings ---- Sass vars, etc.
@import "1-settings/settings.global";            // The global settings file contains any project-wide variables; things that need to be made available to the entire codebase.
@import "1-settings/settings.core";              //  This core file sets up inuitcssâ€™ most important setup variables.
@import "1-settings/settings.colours";           //  Project colour settings
@import "1-settings/settings.font-files";        //  For adding @fontface files


//
// Tools --- Functions and mixins.
@import "2-tools/tools.font-size";               //  Generates as baseline font size
@import "2-tools/tools.mq";                      //  Allows us to target responsive
@import "2-tools/tools.gradient";                //  Mixins for s-curved gradient
@import "2-tools/tools.fonts";                   //  Mixins loading font styles and weights
@import "2-tools/tools.helpers";                 //  Mixins for common features: bg-cover; blur; clearfix; drop-shadow; gradient; hidden; inline-block; transitions; vendor

@import "2-tools/tools.font-awesome";            //  Font awesome 5 loader
@import "2-tools/_tools.font-awesome/v4-shims";  //  Helper for upgrading from FA 4
@import "2-tools/_tools.font-awesome/brands";    //  Font awesome brand icons
@import "2-tools/_tools.font-awesome/regular";   //  Font awesome regular
@import "2-tools/_tools.font-awesome/light";     //  Font awesome light
@import "2-tools/_tools.font-awesome/solid";     //  Font awesome solid



//
// Generic --- Generic, high-level styling, like resets, etc.
@import "3-generic/generic.box-sizing";          //  More sensible default box-sizing
@import "3-generic/generic.normalize";           //  Set of defaults to bring unify browser styles.
@import "3-generic/generic.reset";               //  A very simple reset that sits on top of Normalize.css.
@import "3-generic/generic.shared";              //  Shared declarations for certain elements.


//
// Elements --- Unclasses HTML elements (e.g. `h2`, `ul`).
@import "4-elements/elements.forms";             //  Default styles for form components
@import "4-elements/elements.headings";          //  Simple default styles for headings 1 through 6.
@import "4-elements/elements.text";              //  Defaults text styles for standard pages
@import "4-elements/elements.tables";            //  Simple table setup.
@import "4-elements/elements.page";              //  Simple page-level setup.
@import "4-elements/elements.images";            //  Fluid images for responsive purposes.


//
// Objects --- Objects and abstractions.
@import "5-objects/objects.wrapper";             //  Page-level constraining and wrapping elements.
@import "5-objects/objects.layout";              //  Grid-like layout system.
@import "5-objects/objects.list-bare";           //  Strip list-like appearance from lists by removing their bullets, and any indentation.
@import "5-objects/objects.list-inline";         //  The list-inline object simply displays a list of items in one line.
@import "5-objects/objects.block";               //  Stacked image-with-text object. A simple abstraction to cover a very commonly occurring design pattern.
@import "5-objects/objects.crop";                //  A list of cropping ratios that get generated as modifier classes.
@import "5-objects/objects.table";               //  A simple object for manipulating the structure of HTML `table`s.
@import "5-objects/objects.responsive-iframe";   //  Class to create responsive iframes. Simple add a class of iframe-container to a wrapper containing your iframe
@import "5-objects/objects.nav";                 //  Class for default nav list
@import "5-objects/objects.max-width";           //  Loops through various widths to create classes for max-widths
@import "5-objects/objects.put-left-right";      //  Lightweight approach to splitting two columns in to halves at various breakpoints
@import "5-objects/objects.text-sizes";


//
// Components --- Your designed UI elements
@import "6-components/components.buttons";
@import "6-components/components.wrappers";
@import "6-components/components.header";
@import "6-components/components.masthead";
@import "6-components/components.container";
@import "6-components/components.col";
@import "6-components/components.text-area";
@import "6-components/components.image";
@import "6-components/components.card";
@import "6-components/components.forms";
@import "6-components/components.main";



//
// Utilities --- Overrides and helper classes.
@import "7-utilities/utilities.clearfix";        //  Attach our clearfix mixin to a utility class.
@import "7-utilities/utilities.widths";          //  A series of width helper classes that you can use to size things like grid systems.
@import "7-utilities/utilities.spacing";         //  Utility classes to put specific spacing values onto elements.
@import "7-utilities/utilities.hide";            //  Hide only visually, but have it available for screen readers.
@import "7-utilities/utilities.colour-classes";  //  Color class overrides based on on colors map in settings
